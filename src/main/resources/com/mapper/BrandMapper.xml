<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace :

-->
<mapper namespace="com.mapper.BrandMapper">


    <!--the database name is different from the Brand field name
        solution : Using a mapper database -> property
    -->
    <!--
       define result
       use resultMap property to replace resultType

    -->
    <resultMap id="brandResultMap" type="com.pojo.Brand">
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>


    <!--    <sql id="brand_column">-->
    <!--        select id, brand_name as brandName, company_name as companyName, ordered, description, status-->
    <!--        from tb_brand;-->
    <!--    </sql>-->

    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id = #{id};
    </select>
    <!--    <select id="selectByCondition" resultMap="brandResultMap">-->
    <!--        select *-->
    <!--        from tb_brand-->
    <!--        where status = #{status}-->
    <!--        and company_name like #{companyName}-->
    <!--        and brand_name like #{brandName};-->
    <!--    </select>-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != ''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != ''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose> <!-- like switch -->
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name = #{companyName}
                </when>
                <when test="brandName != null and brandName != ''">
                    brand_name = #{brandName}
                </when>
                <when test="id != null">
                    id = #{id}
                </when>

            </choose>
        </where>
    </select>
    <insert id="insertAll" useGeneratedKeys="true" keyProperty="id">

        insert into mybatis.tb_brand (brand_name, company_name, ordered, description, status)
        values (#{brandName}, #{companyName}, #{ordered},#{description}, #{status})
    </insert>
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName !=''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and brandName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>

        </set>
        where id = #{id};
    </update>
    <update id="updateByUser">
        update tb_brand
        <set>
            <if test="brand.brandName != null and brand.brandName !=''">
                brand_name = #{brand.brandName},
            </if>
            <if test="brand.companyName != null and brand.brandName != ''">
                company_name = #{brand.companyName},
            </if>
            <if test="brand.ordered != null">
                ordered = #{brand.ordered},
            </if>
            <if test="brand.description != null and brand.description != ''">
                description = #{brand.description},
            </if>
            <if test="brand.status != null">
                status = #{brand.status}
            </if>
        </set>
        where id = #{brand.id}
    </update>
    <!--////////////////////////////////////////////////////////////////////////////////////////-->
<!--delete-->
<delete id="deleteById">
    delete from tb_brand where id = #{id}
</delete>
    <!--
    when you use foreach tag to iterate an array, mybatis will pack it to a map
    the map key's name is array by default, key's value is the input array
    or you can use @Param to change the map default name
    -->
    <delete id="deleteByIds">
        delete from tb_brand where id
        in
            <foreach collection="array" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>

    </delete>
</mapper>